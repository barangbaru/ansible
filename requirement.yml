- name: Install server requirement
  hosts: all
  become: yes
  tasks:
    - name: Check if curl is installed (Debian-based systems)
      command: dpkg -l | grep curl
      ignore_errors: yes
      register: curl_check
      changed_when: false

    - name: Check if curl is installed (Red Hat-based systems)
      command: rpm -q curl
      ignore_errors: yes
      register: curl_check
      changed_when: false

    - name: Install curl (Debian-based systems)
      apt:
        name: curl
        state: present
      when: curl_check.failed and ansible_distribution == 'Ubuntu'

    - name: Install curl (Red Hat-based systems)
      yum:
        name: curl
        state: present
      when: curl_check.failed and ansible_distribution == 'CentOS'

      - name: Install Python pip
        apt: name={{ item }} update_cache=true state=present force_apt_get=yes
        with_items:
        - python-pip
        - python3-pip

      - name: Install Python packages
        pip: name={{ item }}
        with_items:
        - psycopg2-binary

      - name: install pexpect
        pip:
         name: pexpect

    - name: Update package cache
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'  # For Debian-based systems

    - name: Install required packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
      when: ansible_os_family == 'Debian'

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
      when: ansible_os_family == 'Debian'

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
      when: ansible_os_family == 'Debian'

    - name: Update package cache after adding Docker repository
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
      when: ansible_os_family == 'Debian'

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add the user to the docker group
      user:
        name: your_username  # Replace with your username
        groups: docker
        append: yes
      become: yes  # Make sure you have sudo privileges

    - name: Restart the SSH service
      service:
        name: ssh
        state: restarted

  handlers:
    - name: Reboot if required
      reboot:
      async: 0
      poll: 0
      ignore_errors: yes
      when: ansible_reboot_required | default(false)
